swagger: "2.0"
info:
  description: "This API definition facilitates auditing static analysis alerts using\
    \ classifiers, optional adaptive heuristics, and alert prioritization. The API\
    \ enables jump-starting labeled datasets using test suites. It is intended to\
    \ enable a wide range of users (with widely varying datasets, static analysis\
    \ tools, machine learning expertise, and amount of labeled data) to benefit from\
    \ using classifiers and sophisticated prioritization to automatically triage static\
    \ analysis alerts."
  version: "1.2.2"
  title: "SCAIFE DataHub Module API Definition"
  contact:
    name: "SCAIFE Project"
    url: "https://www.sei.cmu.edu/research-capabilities/all-work/display.cfm?customel_datapageid_4050=6453"
    email: "lflynn@cert.org"
  license:
    name: "  SCAIFE API Copyright 2007-2020 Carnegie Mellon University. All Rights\
      \ Reserved.   Redistribution and use in source and binary forms, with or without\
      \ modification, are permitted provided that the following conditions are met:\
      \   1. Redistributions of source code must retain the above copyright notice,\
      \ this list of conditions and the following disclaimer.   2. Redistributions\
      \ in binary form must reproduce the above copyright notice, this list of conditions\
      \ and the following disclaimer in the documentation and/or other materials provided\
      \ with the distribution.   3. Products derived from this software may not include\
      \ 'Carnegie Mellon University,' 'SEI' and/or 'Software Engineering Institute'\
      \ in the name of such derived product, nor shall 'Carnegie Mellon University,'\
      \ 'SEI' and/or 'Software Engineering Institute' be used to endorse or promote\
      \ products derived from this software without prior written permission. For\
      \ written permission, please contact permission@sei.cmu.edu.   ACKNOWLEDGMENTS\
      \ AND DISCLAIMERS:   This material is based upon work funded and supported by\
      \ the Department of Defense under Contract No. FA8702-15-D-0002 with Carnegie\
      \ Mellon University for the operation of the Software Engineering Institute,\
      \ a federally funded research and development center.   The view, opinions,\
      \ and/or findings contained in this material are those of the author(s) and\
      \ should not be construed as an official Government position, policy, or decision,\
      \ unless designated by other documentation.   NO WARRANTY. THIS CARNEGIE MELLON\
      \ UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE MATERIAL IS FURNISHED ON AN\
      \ 'AS-IS' BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND,\
      \ EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO,\
      \ WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS\
      \ OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE\
      \ ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR\
      \ COPYRIGHT INFRINGEMENT.   [DISTRIBUTION STATEMENT A] This material has been\
      \ approved for public release and unlimited distribution.  Please see Copyright\
      \ notice for non-US Government use and distribution.   This material includes\
      \ field names used in the Software Assurance Marketplace (SWAMP), a service\
      \ that provides continuous software assurance capabilities to developers and\
      \ researchers at https://www.mir-swamp.org/#.  Copyright Â© 2012-2020 The Morgridge\
      \ Institute for Research, Inc. All rights reserved.   This material includes\
      \ field names used in the Software Assurance Tool (SwAT), a tool that is used\
      \ by analysts to analyze static analysis alerts from multiple static analysis\
      \ tools. https://www.cerdec.army.mil/ Combat Capabilities Development Command\
      \ (CCDC) C5ISR Center. All rights reserved.   DM19-0572   "
host: "127.0.0.1:8084"
paths:
  /status:
    get:
      tags:
      - "DataHub_Server"
      summary: "Provides Server Status"
      operationId: "get_status"
      produces:
      - "application/json"
      parameters:
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      responses:
        "200":
          description: "Server Is Running"
          schema:
            $ref: "#/definitions/request_token"
        "400":
          description: "Database Connection Lost"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
  /status/tool-output/{task_id}:
    get:
      tags:
      - "Task_Status"
      summary: "Provides the status of tool output uploads, and results when they\
        \ are available"
      operationId: "get_tool_output_status"
      produces:
      - "application/json"
      parameters:
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "task_id"
        in: "path"
        description: "Task ID for the tool output upload process"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK, Tool Output Successfully Uploaded"
          schema:
            $ref: "#/definitions/tool_alert_mappings"
        "202":
          description: "Task Pending, Not Completed"
        "400":
          description: "Unable to Upload Tool Output"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Invalid Task ID"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.task_status_controller"
  /languages:
    get:
      tags:
      - "DataHub_Server"
      summary: "Retrieve a list of all the available languages."
      operationId: "list_languages"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      responses:
        "200":
          description: "Return a List of Languages Available in the Module"
          schema:
            $ref: "#/definitions/list_languages_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "No Languages Available"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Create a new language definition."
      operationId: "create_language"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - in: "body"
        name: "language_definition"
        description: "Language information"
        required: true
        schema:
          $ref: "#/definitions/language_version"
      responses:
        "200":
          description: "Language Successfully Uploaded"
          schema:
            $ref: "#/definitions/create_language_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /packages:
    get:
      tags:
      - "DataHub_Server"
      summary: "Retrieve a list of all available packages."
      operationId: "list_packages"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      responses:
        "200":
          description: "Return a List of Available Packages"
          schema:
            $ref: "#/definitions/list_packages_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "No Packages Available"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Create a new package. This request will return the package_id used\
        \ to reference the package within the DataHub. Note, for metrics data uploads\
        \ use PUT /tools/{tool_id}."
      operationId: "create_package"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - in: "body"
        name: "package_metadata"
        description: "Data to the create package"
        required: true
        schema:
          $ref: "#/definitions/package_metadata"
      responses:
        "200":
          description: "Package Successfully Created"
          schema:
            $ref: "#/definitions/create_package_response"
        "400":
          description: "Unable to Create Package"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "422":
          description: "Package Data Exists"
          schema:
            $ref: "#/definitions/create_package_response"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /packages/{package_id}:
    get:
      tags:
      - "DataHub_Server"
      summary: "Retrieve an existing package in the DataHub Module."
      operationId: "get_package"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "ID of the package to retrieve"
        required: true
        type: "string"
      responses:
        "200":
          description: "Return an Existing Package"
          schema:
            $ref: "#/definitions/get_package_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Package Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Upload a Source Code Archive and MetaData Files for the Package."
      operationId: "upload_codebase_for_package"
      consumes:
      - "application/json"
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "ID of the package to update"
        required: true
        type: "string"
      - name: "sourcecode_archive"
        in: "formData"
        description: "Source Code Archive for this package"
        required: true
        type: "file"
      - name: "source_file_csv"
        in: "formData"
        description: "Source File CSV"
        required: false
        type: "file"
      - name: "source_function_csv"
        in: "formData"
        description: "Source Function CSV"
        required: false
        type: "file"
      responses:
        "200":
          description: "Code Source Successfully Uploaded"
          schema:
            $ref: "#/definitions/request_token"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Unable to Upload Code Source Archive"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
    put:
      tags:
      - "UI_to_DataHub"
      summary: "Update an existing package. Use this method to add new alerts for\
        \ the package. Note, for metrics data uploads use POST /tools/{tool_id}/packages/{package_id}."
      operationId: "edit_package"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "ID of the package to update"
        required: true
        type: "string"
      - in: "body"
        name: "edit_package"
        description: "Package data to modify the existing package with"
        required: true
        schema:
          $ref: "#/definitions/edit_package"
      responses:
        "200":
          description: "Package Successfully Updated"
          schema:
            $ref: "#/definitions/edit_package_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Unable to Update Package"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
    delete:
      tags:
      - "UI_to_DataHub"
      summary: "Delete an existing package."
      operationId: "delete_package"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "ID of the package to delete"
        required: true
        type: "string"
      responses:
        "200":
          description: "Package Successfully Deleted"
          schema:
            $ref: "#/definitions/request_token"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Unable to Delete Package"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /projects:
    get:
      tags:
      - "DataHub_Server"
      summary: "Retrieve a list of all available projects."
      operationId: "list_projects"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      responses:
        "200":
          description: "Return a List of Available Projects"
          schema:
            $ref: "#/definitions/list_projects_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "No Projects Available"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Create a new project. The package and taxonomies should be uploaded\
        \ to the DataHub prior to creating a project. This request will return the\
        \ project_id to reference the project within the DataHub."
      operationId: "create_project"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - in: "body"
        name: "project_metadata"
        description: "Data to a create project"
        required: true
        schema:
          $ref: "#/definitions/project_metadata"
      responses:
        "200":
          description: "Project Successfully Created"
          schema:
            $ref: "#/definitions/create_project_response"
        "400":
          description: "Unable to Create Project"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "422":
          description: "Project Data Exists"
          schema:
            $ref: "#/definitions/create_project_response"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /projects/{project_id}:
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Send a request to the DataHub to enable data forwarding for all future\
        \ updates to this project"
      operationId: "enable_data_forwarding"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "project_id"
        in: "path"
        description: "The ID of the project to enable data forwarding"
        required: true
        type: "string"
      responses:
        "200":
          description: "Data Forwarding Successfully Enabled"
        "400":
          description: "Data Forwarding Failed"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Project Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
    put:
      tags:
      - "UI_to_DataHub"
      summary: "Update an existing project. This method can also be used to send only\
        \ meta-alert determinations of an existing meta-alert to the DataHub, which\
        \ is most useful when a project has an open adaptive heuristic set."
      operationId: "edit_project"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "project_id"
        in: "path"
        description: "The ID of the project to update"
        required: true
        type: "string"
      - in: "body"
        name: "edit_project"
        description: "Project data to modify the existing project with"
        required: true
        schema:
          $ref: "#/definitions/edit_project"
      responses:
        "200":
          description: "Package was Successfully Updated"
          schema:
            $ref: "#/definitions/edit_project_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Unable to Update Project"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
    delete:
      tags:
      - "UI_to_DataHub"
      summary: "Delete an existing project."
      operationId: "delete_project"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "project_id"
        in: "path"
        description: "The ID of the project to delete"
        required: true
        type: "string"
      responses:
        "200":
          description: "Project Successfully Deleted"
          schema:
            $ref: "#/definitions/request_token"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Project Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /projects/{project_id}/alerts:
    get:
      tags:
      - "DataHub_Server"
      summary: "Retrieve only the alerts and meta-alerts for a specific project."
      operationId: "get_alerts_for_project"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "project_id"
        in: "path"
        description: "The ID of the project"
        required: true
        type: "string"
      responses:
        "200":
          description: "Return the Alerts and Meta-Alerts Associated with the Project"
          schema:
            $ref: "#/definitions/get_alerts_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Alerts and Meta-Alerts Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
  /projects/{project_id}/cascade:
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Cascade determinations from this project"
      operationId: "cascade_determinations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "project_id"
        in: "path"
        description: "The ID of the project"
        required: true
        type: "string"
      - in: "body"
        name: "cascade_determinations"
        description: "Cascading configuration information"
        required: true
        schema:
          $ref: "#/definitions/cascade_determinations"
      responses:
        "200":
          description: "Determinations Cascaded Successfully"
          schema:
            $ref: "#/definitions/cascading_performance"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Project Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /projects/{project_id}/determinations:
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Send updated meta-alert determinations for a specific project."
      operationId: "send_meta_alerts_for_project"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "project_id"
        in: "path"
        description: "The ID of the project"
        required: true
        type: "string"
      - in: "body"
        name: "meta_alert_determinations"
        description: "The list of meta-alert IDs and determinations"
        required: true
        schema:
          $ref: "#/definitions/meta_alert_determinations"
      responses:
        "200":
          description: "Meta Alerts Updated"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Project Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /projects/retrieve:
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Retrieve projects from the DataHub. Send taxonomy information the\
        \ requestor already has, along with projects it is requesting. This way, a\
        \ response from the DataHub can efficiently leave out taxonomies that the\
        \ requestor already has information for."
      operationId: "get_projects"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - in: "body"
        name: "projects_requested"
        description: "'Taxonomy information the requesting module already has, along\
          \ with projects it is requesting.'"
        required: true
        schema:
          $ref: "#/definitions/projects_requested"
      responses:
        "200":
          description: "Return Existing Projects"
          schema:
            $ref: "#/definitions/get_projects_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Projects Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /projects/classifiers/retrieve:
    post:
      tags:
      - "Stats_to_DataHub"
      summary: "Retrieve projects from the DataHub for Classification at the Stats\
        \ Module"
      operationId: "get_projects_for_classifier"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - in: "body"
        name: "classifier_projects_requested"
        description: "'Tool and taxonomy information the requesting module already\
          \ has, along with projects it is requesting.'"
        required: true
        schema:
          $ref: "#/definitions/classifier_projects_requested"
      responses:
        "200":
          description: "Return Existing Projects"
          schema:
            $ref: "#/definitions/get_projects_classifier_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Projects Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.stats_to_data_hub_controller"
  /projects/adaptive_heuristics/close:
    post:
      tags:
      - "Stats_to_DataHub"
      summary: "Send a list of project_ids to stop forwarding the project's alerts\
        \ to the Stats Module."
      operationId: "close_adaptive_heuristics"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - in: "body"
        name: "project_ids"
        description: "'Multiple project_ids to close adaptive heuristic alert forwarding\
          \ request'"
        required: true
        schema:
          $ref: "#/definitions/project_ids"
      responses:
        "200":
          description: "Adaptive Heuristic Forwarding Successfully Closed"
          schema:
            $ref: "#/definitions/adaptive_heuristic_close_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.stats_to_data_hub_controller"
  /taxonomies:
    get:
      tags:
      - "DataHub_Server"
      summary: "Retrieve a list of available Taxonomy ID, Name and Versions Available\
        \ in the Module"
      operationId: "get_taxonomy_list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      responses:
        "200":
          description: "Returns a List of Taxonomy ID, Name and Versions"
          schema:
            $ref: "#/definitions/taxonomy_list_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Taxonomies Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Upload a new taxonomy to the DataHub Module. Returns the taxonomy_id\
        \ and condition_ids to reference this Taxonomy and its Conditions."
      operationId: "create_taxonomy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - in: "body"
        name: "taxonomy_metadata"
        description: "Taxonomy information to upload"
        required: true
        schema:
          $ref: "#/definitions/taxonomy_metadata"
      responses:
        "200":
          description: "OK, Taxonomy Successfully Created"
          schema:
            $ref: "#/definitions/create_taxonomy_response"
        "400":
          description: "Unable to Create Taxonomy"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "422":
          description: "Taxonomy Data Exists"
          schema:
            $ref: "#/definitions/create_taxonomy_response"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /taxonomies/{taxonomy_id}:
    get:
      tags:
      - "DataHub_Server"
      summary: "Retrieve an existing taxonomy based on the name and version."
      operationId: "get_taxonomy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "taxonomy_id"
        in: "path"
        description: "ID of the taxonomy to retrieve"
        required: true
        type: "string"
      responses:
        "200":
          description: "Returns Data for a Specific Taxonomy"
          schema:
            $ref: "#/definitions/get_taxonomy_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Taxonomy Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
    put:
      tags:
      - "UI_to_DataHub"
      summary: "Edit a taxonomy, including uploads of additional conditions"
      operationId: "edit_taxonomy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "taxonomy_id"
        in: "path"
        description: "ID of the taxonomy to retrieve"
        required: true
        type: "string"
      - in: "body"
        name: "edit_taxonomy"
        description: "Taxonomy information to upload"
        required: true
        schema:
          $ref: "#/definitions/edit_taxonomy"
      responses:
        "200":
          description: "Returns Condition Information for a Specific Taxonomy"
          schema:
            $ref: "#/definitions/edit_taxonomy_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Taxonomy Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /taxonomies/{taxonomy_id}/languages:
    get:
      tags:
      - "DataHub_Server"
      summary: "Retrieve the languages associated with this taxonomy"
      operationId: "get_taxonomy_languages"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "taxonomy_id"
        in: "path"
        description: "ID of the taxonomy to retrieve"
        required: true
        type: "string"
      responses:
        "200":
          description: "Returns Languages for a Specific Taxonomy"
          schema:
            $ref: "#/definitions/list_languages_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Taxonomy Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
    put:
      tags:
      - "UI_to_DataHub"
      summary: "Add languages to the taxonomy condition objects"
      operationId: "add_condition_languages"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "taxonomy_id"
        in: "path"
        description: "ID of the taxonomy to retrieve"
        required: true
        type: "string"
      - in: "body"
        name: "condition_languages"
        required: true
        schema:
          $ref: "#/definitions/condition_languages"
      responses:
        "200":
          description: "Condition Languages Successfully Updated"
          schema:
            $ref: "#/definitions/request_token"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Taxonomy, Conditions or Language Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /test_suites:
    get:
      tags:
      - "DataHub_Server"
      summary: "'Retrieve a List of Test Suite ID, Name and Versions Available in\
        \ the Module'"
      operationId: "get_test_suite_list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      responses:
        "200":
          description: "Returns a List of Test Suite ID, Name and Versions"
          schema:
            $ref: "#/definitions/test_suite_list_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Test Suites Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Create a Test Suite in the DataHub Module."
      operationId: "create_test_suite"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - in: "body"
        name: "test_suite_metadata"
        description: "Test Suite information to upload"
        required: true
        schema:
          $ref: "#/definitions/test_suite_metadata"
      responses:
        "200":
          description: "OK, Test Suite Successfully Uploaded"
          schema:
            $ref: "#/definitions/test_suite_upload_response"
        "400":
          description: "Unable to Upload Test Suite"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "422":
          description: "Test Suite Data Exists"
          schema:
            $ref: "#/definitions/test_suite_upload_response"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /test_suites/{test_suite_id}/packages/{package_id}:
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Upload Test Suite MetaData Files"
      operationId: "upload_test_suite"
      consumes:
      - "multipart/form-data"
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "test_suite_id"
        in: "path"
        description: "Test Suite ID to upload data files"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Package ID to upload data files"
        required: true
        type: "string"
      - name: "manifest_file"
        in: "formData"
        required: true
        type: "file"
      - name: "use_license_file"
        in: "formData"
        required: false
        type: "file"
      - name: "source_file_csv"
        in: "formData"
        description: "Source File CSV"
        required: false
        type: "file"
      - name: "source_function_csv"
        in: "formData"
        description: "Source Function CSV"
        required: false
        type: "file"
      responses:
        "200":
          description: "Data Successfully Uploaded"
          schema:
            $ref: "#/definitions/request_token"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /tools:
    get:
      tags:
      - "DataHub_Server"
      summary: "Retrieve a List of Tool ID, Name, and Versions Available in the Module"
      operationId: "get_tool_list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      responses:
        "200":
          description: "'Returns a List of Tool ID, Name, and Versions Available in\
            \ the\n Module'"
          schema:
            $ref: "#/definitions/tool_list_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Tools Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Upload a new Tool to the DataHub Module. Returns a tool_id to reference\
        \ the tool in the DataHub Module. For code metrics tools, upload a list of\
        \ ordered field names."
      operationId: "upload_tool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - in: "body"
        name: "tool_metadata"
        description: "Tool information to upload"
        required: true
        schema:
          $ref: "#/definitions/tool_metadata"
      responses:
        "200":
          description: "OK, Tool Successfully Uploaded"
          schema:
            $ref: "#/definitions/tool_upload_response"
        "400":
          description: "Unable to Upload Tool Information"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "422":
          description: "Tool Exists, Return Tool ID"
          schema:
            $ref: "#/definitions/tool_upload_response"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /tools/parsers:
    get:
      tags:
      - "DataHub_Server"
      summary: "Retrieve a List of Tool Parsers Available in the Module. The values\
        \ should be used to set the tool_parser parameter in the POST /tools API"
      operationId: "get_tool_parsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      responses:
        "200":
          description: "'Returns a List of Tool Parsers Available in the Module'"
          schema:
            $ref: "#/definitions/tool_parsers"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Tool Parsers Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
  /tools/{tool_id}:
    get:
      tags:
      - "DataHub_Server"
      summary: "Retrieve an existing tool in the DataHub Module."
      operationId: "get_tool_data"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "tool_id"
        in: "path"
        description: "Tool ID to retrieve data"
        required: true
        type: "string"
      responses:
        "200":
          description: "Returns data for a particular tool"
          schema:
            $ref: "#/definitions/get_tool_response"
        "400":
          description: "Invalid Request"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Tool Information Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.data_hub_server_controller"
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Edit metadata for a tool"
      operationId: "edit_tool"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "tool_id"
        in: "path"
        description: "Tool ID to update data"
        required: true
        type: "string"
      - in: "body"
        name: "edit_tool_metadata"
        description: "Tool information to upload"
        required: true
        schema:
          $ref: "#/definitions/edit_tool_metadata"
      responses:
        "200":
          description: "OK, Tool Successfully Updated"
          schema:
            $ref: "#/definitions/tool_upload_response"
        "400":
          description: "Unable to Update Tool Information"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Tool Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
    put:
      tags:
      - "UI_to_DataHub"
      summary: "Update a tool with a Checker-Mapping CSV"
      operationId: "add_checker_mapping_file"
      consumes:
      - "application/json"
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "tool_id"
        in: "path"
        description: "Tool ID to update data"
        required: true
        type: "string"
      - name: "checker_mapping_csv"
        in: "formData"
        description: "'CSV with checker mappings, the filename should match the mapping_filename\
          \ in tool_metadata'"
        required: true
        type: "file"
      responses:
        "200":
          description: "OK, Tool Successfully Updated"
          schema:
            $ref: "#/definitions/tool_response_mapping"
        "400":
          description: "Unable to Upload Checker or Metrics Information"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        "404":
          description: "Tool Information Unavailable"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
  /tools/{tool_id}/packages/{package_id}:
    post:
      tags:
      - "UI_to_DataHub"
      summary: "Upload Raw Tool Output and Metrics Tool CSVs"
      operationId: "upload_tool_output"
      consumes:
      - "application/json"
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "x_access_token"
        in: "header"
        description: "Token that contains information about the user"
        required: true
        type: "string"
      - name: "x_request_token"
        in: "header"
        description: "Token that associates messages with each other"
        required: true
        type: "string"
      - name: "tool_id"
        in: "path"
        description: "Tool ID to upload data"
        required: true
        type: "string"
      - name: "package_id"
        in: "path"
        description: "Package ID to upload data"
        required: true
        type: "string"
      - name: "metrics_tool_csv"
        in: "formData"
        description: "Metrics Tool CSV to Upload, the filename should contain one\
          \ of the following values \\:\\'lizard\\', \\'understand\\', or  \\'ccsm\\\
          '"
        required: false
        type: "file"
      - name: "raw_tool_output"
        in: "formData"
        description: "Raw Tool Output to Upload to the DataHub"
        required: false
        type: "file"
      responses:
        "200":
          description: "OK, Tool Output Accepted"
          schema:
            $ref: "#/definitions/task_status"
        "400":
          description: "Unable to Upload Tool Output"
        "401":
          description: "Invalid Token Request"
        "403":
          description: "Missing Required Tokens"
        default:
          description: "Unexpected Error"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.ui_to_data_hub_controller"
definitions:
  adaptive_heuristic_close_response:
    type: "object"
    required:
    - "project_status"
    - "request_id"
    properties:
      request_id:
        type: "string"
      project_status:
        type: "array"
        items:
          $ref: "#/definitions/project_heuristic_message"
  alert_mappings:
    type: "object"
    required:
    - "alert_id"
    - "checker_id"
    - "primary_message"
    properties:
      alert_id:
        type: "string"
      checker_id:
        type: "string"
      primary_message:
        $ref: "#/definitions/message"
  alert_no_id:
    type: "object"
    required:
    - "checker_id"
    - "code_language"
    - "primary_message"
    - "tool_id"
    properties:
      tool_id:
        type: "string"
      checker_id:
        type: "string"
      code_language:
        $ref: "#/definitions/language_version"
      primary_message:
        $ref: "#/definitions/message"
      secondary_messages:
        type: "array"
        items:
          $ref: "#/definitions/message"
  alert_w_id:
    type: "object"
    required:
    - "alert_id"
    - "checker_id"
    - "primary_message"
    - "tool_id"
    properties:
      alert_id:
        type: "string"
      tool_id:
        type: "string"
      checker_id:
        type: "string"
      code_language_id:
        type: "string"
      primary_message:
        $ref: "#/definitions/message"
      secondary_messages:
        type: "array"
        items:
          $ref: "#/definitions/message"
  cascade_determinations:
    type: "object"
    properties:
      cascading_type:
        type: "string"
        description: "Type of Cascading to Perform. Options include 'diff' and 'precise'"
      project_url:
        type: "string"
        format: "uri"
        description: "URL of the new project data to cascade determinations into"
      cascading_project_id:
        type: "string"
        description: "Project ID of project in DataHub to cascade determinations into"
  cascading_performance:
    type: "object"
    properties:
      project_id:
        type: "string"
      trues_cascaded:
        type: "integer"
        description: "Number of True values that cascaded into the new project"
      falses_cascaded:
        type: "integer"
        description: "Number of False values that cascaded into the new project"
      new_meta_alerts:
        type: "integer"
        description: "Number of new meta-alerts that did not get a cascading value"
      old_meta_alerts:
        type: "integer"
        description: "Number of old adjudications that did not cascade into the new\
          \ project"
      last_performed:
        type: "string"
        format: "date-time"
        description: "Date and time the cascading was performed"
  checker:
    type: "object"
    properties:
      checker_id:
        type: "string"
      checker_name:
        type: "string"
  checker_condition_map:
    type: "object"
    required:
    - "condition_name"
    - "taxonomy_name"
    - "title"
    properties:
      taxonomy_name:
        type: "string"
      taxonomy_version:
        type: "string"
      condition_name:
        type: "string"
      title:
        type: "string"
      code_language_ids:
        type: "array"
        items:
          type: "string"
      platforms:
        type: "array"
        items:
          type: "string"
      condition_fields:
        type: "object"
        description: "Fields associated with this condition, i.e., likelihood"
        properties: {}
  checker_conditions:
    type: "object"
    properties:
      checker_id:
        type: "string"
      checker_name:
        type: "string"
      conditions:
        type: "array"
        items:
          $ref: "#/definitions/condition_map"
  checker_conditions_no_id:
    type: "object"
    properties:
      checker_name:
        type: "string"
      conditions:
        type: "array"
        items:
          $ref: "#/definitions/checker_condition_map"
  checker_mappings:
    type: "object"
    properties:
      checker_id:
        type: "string"
      checker_name:
        type: "string"
      tool_id:
        type: "string"
      conditions:
        type: "array"
        items:
          $ref: "#/definitions/condition_response"
  checker_mappings_metadata:
    type: "object"
    properties:
      mapping_source:
        type: "string"
        description: "Source of the mapping, e.g., CERT wiki, scale.app, etc."
      mapper_identity:
        type: "array"
        items:
          type: "string"
          description: "Mapper of the checker mappings, e.g., Vendor, Public, SC-Team,\
            \ etc."
      mapping_version:
        type: "string"
      publishable_public_or_not:
        type: "boolean"
      dod_publication:
        type: "boolean"
      deprecated_or_not:
        type: "boolean"
      license_information:
        type: "string"
      additional_notes:
        type: "string"
      description:
        type: "string"
      mapping_date:
        type: "string"
        format: "date-time"
      mapping_filename:
        type: "string"
        description: "'Filename of the mappings CSV that this data describes and will\
          \ be uploaded in a subsequent call'"
      mappings:
        type: "array"
        items:
          $ref: "#/definitions/checker_conditions_no_id"
  classifier_package:
    type: "object"
    required:
    - "created_at"
    - "package_id"
    - "package_name"
    properties:
      package_id:
        type: "string"
      package_name:
        type: "string"
      package_description:
        type: "string"
      code_languages:
        $ref: "#/definitions/list_languages"
      alerts:
        $ref: "#/definitions/package_alerts_w_id"
      test_suite_id:
        type: "string"
      tools:
        type: "array"
        items:
          $ref: "#/definitions/get_classifier_tool"
      source_files:
        type: "array"
        items:
          $ref: "#/definitions/source_file"
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  classifier_project:
    type: "object"
    properties:
      project_id:
        type: "string"
      project_name:
        type: "string"
      project_description:
        type: "string"
      package:
        $ref: "#/definitions/classifier_package"
      meta_alerts:
        type: "array"
        items:
          $ref: "#/definitions/meta_alert_w_id"
      taxonomies:
        type: "array"
        items:
          $ref: "#/definitions/get_taxonomy"
      author_source:
        type: "string"
      adaptive_heuristic_is_active:
        type: "boolean"
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  classifier_projects_requested:
    type: "object"
    required:
    - "project_status"
    properties:
      tool_taxonomies_present:
        $ref: "#/definitions/tool_taxonomies_present"
      project_status:
        type: "array"
        items:
          $ref: "#/definitions/project_status"
  condition:
    type: "object"
    required:
    - "condition_name"
    - "title"
    properties:
      code_language_ids:
        type: "array"
        items:
          type: "string"
      condition_name:
        type: "string"
      title:
        type: "string"
      platforms:
        type: "array"
        items:
          type: "string"
      condition_fields:
        type: "object"
        description: "Fields associated with this condition, i.e., likelihood"
        properties: {}
  condition_heading:
    type: "object"
    properties:
      condition_id:
        type: "string"
      condition_name:
        type: "string"
      title:
        type: "string"
  condition_languages:
    type: "object"
    required:
    - "code_language_ids"
    - "condition_ids"
    properties:
      code_language_ids:
        type: "array"
        items:
          type: "string"
      condition_ids:
        type: "array"
        items:
          type: "string"
  condition_map:
    type: "object"
    required:
    - "condition_id"
    properties:
      taxonomy_id:
        type: "string"
      condition_id:
        type: "string"
      condition_name:
        type: "string"
      title:
        type: "string"
      code_language_ids:
        type: "array"
        items:
          type: "string"
      platforms:
        type: "array"
        items:
          type: "string"
      condition_fields:
        type: "object"
        description: "Fields associated with this condition, i.e., likelihood"
        properties: {}
  condition_response:
    type: "object"
    required:
    - "condition_id"
    - "condition_name"
    - "title"
    properties:
      condition_id:
        type: "string"
      condition_name:
        type: "string"
      title:
        type: "string"
      taxonomy:
        $ref: "#/definitions/taxonomy_heading"
      platforms:
        type: "array"
        items:
          type: "string"
      code_language_ids:
        type: "array"
        items:
          type: "string"
      condition_fields:
        type: "object"
        description: "Fields associated with this condition, i.e., likelihood"
        properties: {}
  condition_response_no_tax:
    type: "object"
    required:
    - "condition_id"
    - "condition_name"
    - "title"
    properties:
      condition_id:
        type: "string"
      condition_name:
        type: "string"
      title:
        type: "string"
      platforms:
        type: "array"
        items:
          type: "string"
      code_language_ids:
        type: "array"
        items:
          type: "string"
      condition_fields:
        type: "object"
        description: "Fields associated with this condition, i.e., likelihood"
        properties: {}
  create_language_response:
    type: "object"
    properties:
      request_id:
        type: "string"
      language:
        $ref: "#/definitions/language_version_w_id"
  create_package_response:
    type: "object"
    required:
    - "package"
    - "request_id"
    properties:
      request_id:
        type: "string"
      package:
        $ref: "#/definitions/created_package"
      status_message:
        type: "array"
        description: "Messages indicating the status of the package upload."
        items:
          type: "string"
  create_project_response:
    type: "object"
    required:
    - "project"
    - "request_id"
    properties:
      request_id:
        type: "string"
      project:
        $ref: "#/definitions/created_project"
      status_message:
        type: "array"
        description: "Messages indicating the status of the package upload."
        items:
          type: "string"
  created_package:
    type: "object"
    required:
    - "package_id"
    - "package_name"
    properties:
      package_id:
        type: "string"
      package_name:
        type: "string"
      alert_mappings:
        type: "array"
        description: "Alert IDs created in the DataHub"
        items:
          $ref: "#/definitions/alert_mappings"
  created_project:
    type: "object"
    required:
    - "project_id"
    - "project_name"
    properties:
      project_id:
        type: "string"
      project_name:
        type: "string"
      meta_alert_mappings:
        type: "array"
        description: "Meta-Alert IDs created in the DataHub"
        items:
          $ref: "#/definitions/meta_alert_mappings"
  create_taxonomy:
    type: "object"
    required:
    - "conditions"
    - "taxonomy_id"
    properties:
      taxonomy_id:
        type: "string"
      conditions:
        type: "array"
        items:
          $ref: "#/definitions/condition_heading"
  create_taxonomy_response:
    type: "object"
    properties:
      request_id:
        type: "string"
      taxonomy:
        $ref: "#/definitions/create_taxonomy"
  determination:
    type: "object"
    properties:
      flag_list:
        type: "array"
        items:
          $ref: "#/definitions/determination_flag_list"
      verdict_list:
        type: "array"
        items:
          $ref: "#/definitions/determination_verdict_list"
      ignored_list:
        type: "array"
        items:
          $ref: "#/definitions/determination_ignored_list"
      dead_list:
        type: "array"
        items:
          $ref: "#/definitions/determination_dead_list"
      inapplicable_environment_list:
        type: "array"
        items:
          $ref: "#/definitions/determination_inapplicable_environment_list"
      dangerous_construct_list:
        type: "array"
        items:
          $ref: "#/definitions/determination_dangerous_construct_list"
      notes_list:
        type: "array"
        items:
          $ref: "#/definitions/determination_notes_list"
  determination_dangerous_construct_list:
    type: "object"
    properties:
      dangerous_construct:
        type: "string"
        description: "Options for this field include Unknown, No Risk, Low Risk, Medium\
          \ Risk, and High Risk"
      timestamp:
        type: "string"
        format: "date-time"
  determination_dead_list:
    type: "object"
    properties:
      dead:
        type: "string"
      timestamp:
        type: "string"
        format: "date-time"
  determination_flag_list:
    type: "object"
    properties:
      flag:
        type: "boolean"
      timestamp:
        type: "string"
        format: "date-time"
  determination_ignored_list:
    type: "object"
    properties:
      ignored:
        type: "string"
      timestamp:
        type: "string"
        format: "date-time"
  determination_inapplicable_environment_list:
    type: "object"
    properties:
      inapplicable_environment:
        type: "string"
      timestamp:
        type: "string"
        format: "date-time"
  determination_notes_list:
    type: "object"
    properties:
      notes:
        type: "string"
      timestamp:
        type: "string"
        format: "date-time"
  determination_verdict_list:
    type: "object"
    properties:
      verdict:
        type: "string"
        description: "'Options for this field include Unknown, Complex, False, Dependent,\
          \ and True"
      timestamp:
        type: "string"
        format: "date-time"
  edit_package:
    type: "object"
    properties:
      package_name:
        type: "string"
      package_description:
        type: "string"
      tool_ids:
        type: "array"
        description: "List of new tools for this package"
        items:
          type: "string"
      alerts:
        $ref: "#/definitions/package_alerts"
  edit_package_response:
    type: "object"
    required:
    - "package_id"
    - "request_id"
    - "status_message"
    properties:
      request_id:
        type: "string"
      package_id:
        type: "string"
      alert_mappings:
        type: "array"
        items:
          $ref: "#/definitions/alert_mappings"
      status_message:
        type: "string"
  edit_project:
    type: "object"
    properties:
      project_name:
        type: "string"
      project_description:
        type: "string"
      taxonomy_ids:
        type: "array"
        description: "List of new taxonomies for this project"
        items:
          type: "string"
      meta_alerts:
        $ref: "#/definitions/project_meta_alerts"
  edit_project_response:
    type: "object"
    required:
    - "project_id"
    - "request_id"
    - "status_message"
    properties:
      request_id:
        type: "string"
      project_id:
        type: "string"
      meta_alert_mappings:
        type: "array"
        items:
          $ref: "#/definitions/meta_alert_mappings"
      status_message:
        type: "string"
  edit_taxonomy:
    type: "object"
    properties:
      conditions:
        type: "array"
        items:
          $ref: "#/definitions/condition"
  edit_taxonomy_response:
    type: "object"
    properties:
      request_id:
        type: "string"
      conditions:
        type: "array"
        items:
          $ref: "#/definitions/condition_response_no_tax"
  edit_tool_metadata:
    type: "object"
    properties:
      tool_name:
        type: "string"
      tool_version:
        type: "string"
      language_platforms:
        type: "array"
        description: "Additional list of abbreviated languages that the tool analyzes"
        items:
          type: "string"
      code_language_ids:
        type: "array"
        description: "List of language ids to add to the tool metadata"
        items:
          type: "string"
      checker_mappings:
        type: "array"
        description: "JSON-formatted checker_mappings"
        items:
          $ref: "#/definitions/checker_mappings_metadata"
      checkers:
        type: "array"
        items:
          type: "string"
      code_metrics_headers:
        type: "object"
        description: "Header fields expected for the metrics data"
        properties: {}
  error:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
      message:
        type: "string"
  get_alerts_response:
    type: "object"
    properties:
      request_id:
        type: "string"
      meta_alerts:
        type: "array"
        items:
          $ref: "#/definitions/meta_alert_w_id"
      alerts:
        type: "array"
        items:
          $ref: "#/definitions/alert_w_id"
  get_classifier_tool:
    type: "object"
    required:
    - "category"
    - "tool_id"
    - "tool_name"
    - "tool_version"
    properties:
      tool_id:
        type: "string"
      tool_name:
        type: "string"
      tool_version:
        type: "string"
      category:
        type: "string"
      source_mappings:
        type: "array"
        items:
          $ref: "#/definitions/source_mappings_classifier"
      metrics_data_headers:
        type: "object"
        description: "Header fields expected for the metrics data"
        properties: {}
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      author_source:
        type: "string"
  get_package_response:
    type: "object"
    required:
    - "package"
    - "request_id"
    properties:
      request_id:
        type: "string"
      package:
        $ref: "#/definitions/package"
  get_projects_response:
    type: "object"
    required:
    - "projects"
    - "request_id"
    properties:
      request_id:
        type: "string"
      projects:
        type: "array"
        items:
          $ref: "#/definitions/project"
  get_projects_classifier_response:
    type: "object"
    required:
    - "projects"
    - "request_id"
    properties:
      request_id:
        type: "string"
      projects:
        type: "array"
        items:
          $ref: "#/definitions/classifier_project"
  get_taxonomy:
    type: "object"
    required:
    - "taxonomy_id"
    - "taxonomy_name"
    - "taxonomy_version"
    properties:
      taxonomy_id:
        type: "string"
      taxonomy_name:
        type: "string"
        description: "Name of the taxonomy, i.e., CERT or CWE"
      taxonomy_version:
        type: "string"
      description:
        type: "string"
      conditions:
        type: "array"
        items:
          $ref: "#/definitions/condition_response_no_tax"
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      author_source:
        type: "string"
  get_taxonomy_response:
    type: "object"
    required:
    - "request_id"
    - "taxonomy"
    properties:
      request_id:
        type: "string"
      taxonomy:
        $ref: "#/definitions/get_taxonomy"
  get_tool:
    type: "object"
    required:
    - "category"
    - "tool_id"
    - "tool_name"
    - "tool_version"
    properties:
      tool_id:
        type: "string"
      tool_name:
        type: "string"
      tool_version:
        type: "string"
      category:
        type: "string"
      language_platforms:
        type: "array"
        items:
          type: "string"
      source_mappings:
        type: "array"
        items:
          $ref: "#/definitions/source_mappings"
      metrics_data_headers:
        type: "object"
        description: "Header fields expected for the metrics data"
        properties: {}
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      author_source:
        type: "string"
  get_tool_response:
    type: "object"
    properties:
      request_id:
        type: "string"
      tool:
        $ref: "#/definitions/get_tool"
  language_version:
    type: "object"
    required:
    - "language"
    properties:
      language:
        type: "string"
      version:
        type: "string"
  language_version_w_id:
    type: "object"
    required:
    - "code_language_id"
    - "language"
    properties:
      code_language_id:
        type: "string"
      language:
        type: "string"
      version:
        type: "string"
  list_languages:
    type: "array"
    items:
      $ref: "#/definitions/language_version_w_id"
  list_languages_response:
    type: "object"
    required:
    - "languages"
    - "request_id"
    properties:
      languages:
        $ref: "#/definitions/list_languages"
      request_id:
        type: "string"
  list_packages:
    type: "array"
    items:
      $ref: "#/definitions/package_heading"
  list_packages_response:
    type: "object"
    required:
    - "packages"
    - "request_id"
    properties:
      packages:
        $ref: "#/definitions/list_packages"
      request_id:
        type: "string"
  list_projects:
    type: "array"
    items:
      $ref: "#/definitions/project_heading"
  list_projects_response:
    type: "object"
    required:
    - "projects"
    - "request_id"
    properties:
      projects:
        $ref: "#/definitions/list_projects"
      request_id:
        type: "string"
  message:
    required:
    - "filepath"
    - "line_start"
    - "message_text"
    properties:
      line_start:
        type: "integer"
      line_end:
        type: "integer"
      filepath:
        type: "string"
      message_text:
        type: "string"
  meta_alert_determination:
    type: "object"
    required:
    - "determination"
    - "meta_alert_id"
    properties:
      meta_alert_id:
        type: "string"
      determination:
        $ref: "#/definitions/determination"
  meta_alert_determinations:
    type: "array"
    items:
      $ref: "#/definitions/meta_alert_determination"
  meta_alert_mappings:
    type: "object"
    required:
    - "filepath"
    - "line_number"
    - "meta_alert_id"
    properties:
      meta_alert_id:
        type: "string"
      condition_id:
        type: "string"
      checker_id:
        type: "string"
      filepath:
        type: "string"
      line_number:
        type: "integer"
    description: "Meta-alerts must have either a condition_id or checker_id but not\
      \ both"
  meta_alert_no_id:
    type: "object"
    required:
    - "alert_ids"
    - "filepath"
    - "line_number"
    properties:
      condition_id:
        type: "string"
      checker_id:
        type: "string"
      filepath:
        type: "string"
      line_number:
        type: "integer"
      alert_ids:
        type: "array"
        items:
          type: "string"
      determination:
        $ref: "#/definitions/determination"
      auto_verdict:
        type: "object"
        additionalProperties:
          type: "string"
    description: "Meta-alerts must have either a condition_id or checker_id but not\
      \ both"
  meta_alert_w_id:
    type: "object"
    required:
    - "alert_ids"
    - "filepath"
    - "line_number"
    - "meta_alert_id"
    properties:
      meta_alert_id:
        type: "string"
      condition_id:
        type: "string"
      checker_id:
        type: "string"
      filepath:
        type: "string"
      line_number:
        type: "integer"
      alert_ids:
        type: "array"
        items:
          type: "string"
      determination:
        $ref: "#/definitions/determination"
      auto_verdict:
        type: "object"
        additionalProperties:
          type: "string"
      ct_pm_verdict:
        type: "object"
        additionalProperties:
          type: "string"
    description: "Meta-alerts must have either a condition_id or checker_id but not\
      \ both"
  metrics:
    type: "object"
    description: "Metrics data of various types"
    additionalProperties: {}
  package:
    type: "object"
    required:
    - "created_at"
    - "package_id"
    - "package_name"
    properties:
      package_id:
        type: "string"
      package_name:
        type: "string"
      package_description:
        type: "string"
      code_languages:
        $ref: "#/definitions/list_languages"
      alerts:
        $ref: "#/definitions/package_alerts_w_id"
      source_files:
        type: "array"
        items:
          $ref: "#/definitions/source_file"
      test_suite_id:
        type: "string"
      file_extensions:
        type: "array"
        items:
          type: "string"
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      author_source:
        type: "string"
      tool_ids:
        type: "array"
        items:
          type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  package_alerts_w_id:
    type: "array"
    items:
      $ref: "#/definitions/alert_w_id"
  package_alerts:
    type: "array"
    items:
      $ref: "#/definitions/alert_no_id"
  package_heading:
    type: "object"
    required:
    - "package_description"
    - "package_id"
    - "package_name"
    properties:
      package_id:
        type: "string"
      package_name:
        type: "string"
      package_description:
        type: "string"
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      author_source:
        type: "string"
      file_extensions:
        type: "array"
        items:
          type: "string"
      code__languages:
        $ref: "#/definitions/list_languages"
  package_metadata:
    type: "object"
    required:
    - "code_language_ids"
    - "package_description"
    - "package_name"
    - "tool_ids"
    properties:
      package_name:
        type: "string"
      package_description:
        type: "string"
      author_source:
        type: "string"
      code_language_ids:
        type: "array"
        items:
          type: "string"
      code_source_url:
        type: "string"
        format: "uri"
        description: "URL to Source Code Archive"
      source_file_url:
        type: "string"
        format: "uri"
      source_function_url:
        type: "string"
        format: "uri"
      test_suite_id:
        type: "string"
        description: "Test Suite Associated with this Package"
      alerts:
        $ref: "#/definitions/package_alerts"
      tool_ids:
        type: "array"
        description: "ID of the tools used with this Package"
        items:
          type: "string"
  project:
    type: "object"
    properties:
      project_id:
        type: "string"
      project_name:
        type: "string"
      project_description:
        type: "string"
      package_id:
        type: "string"
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      author_source:
        type: "string"
      meta_alerts:
        type: "array"
        items:
          $ref: "#/definitions/meta_alert_w_id"
      taxonomies:
        type: "array"
        items:
          $ref: "#/definitions/get_taxonomy"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  project_heading:
    type: "object"
    required:
    - "package_id"
    - "project_id"
    - "project_name"
    properties:
      project_id:
        type: "string"
      project_name:
        type: "string"
      project_description:
        type: "string"
      package_id:
        type: "string"
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      author_source:
        type: "string"
  project_heuristic_message:
    type: "object"
    properties:
      project_id:
        type: "string"
      project_updated:
        type: "boolean"
      status_message:
        type: "string"
  project_ids:
    type: "array"
    items:
      type: "string"
  project_meta_alerts:
    type: "array"
    items:
      $ref: "#/definitions/meta_alert_no_id"
  project_metadata:
    type: "object"
    required:
    - "package_id"
    - "project_description"
    - "project_name"
    properties:
      project_name:
        type: "string"
      project_description:
        type: "string"
      author_source:
        type: "string"
      package_id:
        type: "string"
      use_checkers:
        type: "boolean"
        description: "If true, the DataHub will use checkers to create meta-alerts,\\\
          \ \\ instead of checker-to-condition mappings. Default => False"
      meta_alerts:
        $ref: "#/definitions/project_meta_alerts"
      taxonomy_ids:
        type: "array"
        items:
          type: "string"
  projects_requested:
    type: "object"
    required:
    - "project_ids"
    properties:
      taxonomies_present:
        $ref: "#/definitions/taxonomies_present"
      project_ids:
        type: "array"
        items:
          type: "string"
  project_status:
    type: "object"
    required:
    - "project_id"
    - "set_adaptive_heuristic_open"
    properties:
      project_id:
        type: "string"
      set_adaptive_heuristic_open:
        type: "boolean"
  request_token:
    type: "object"
    required:
    - "request_id"
    properties:
      request_id:
        type: "string"
        description: "ID used to correlate messages with each other"
      message:
        type: "string"
  source_file:
    type: "object"
    properties:
      source_file_id:
        type: "string"
      filename:
        type: "string"
      filepath:
        type: "string"
      filepath_depth:
        type: "string"
      defect_info:
        type: "object"
        properties: {}
      code_metrics_data:
        type: "array"
        items:
          $ref: "#/definitions/metrics"
      functions:
        type: "array"
        items:
          $ref: "#/definitions/source_function"
  source_function:
    type: "object"
    properties:
      source_function_id:
        type: "string"
      name:
        type: "string"
      line_start:
        type: "integer"
      line_end:
        type: "integer"
      code_metrics_data:
        type: "array"
        items:
          $ref: "#/definitions/metrics"
  source_mappings:
    type: "object"
    properties:
      mapping_id:
        type: "string"
      mapping_source:
        type: "string"
      checker_mappings:
        type: "array"
        items:
          $ref: "#/definitions/checker_conditions"
  source_mappings_classifier:
    type: "object"
    properties:
      mapping_id:
        type: "string"
      mapping_source:
        type: "string"
      checker_mappings:
        type: "array"
        items:
          $ref: "#/definitions/checker_mappings"
  task_status:
    type: "object"
    required:
    - "task_id"
    - "task_url"
    properties:
      task_id:
        type: "string"
      task_url:
        type: "string"
  taxonomy_heading:
    type: "object"
    required:
    - "taxonomy_id"
    - "taxonomy_name"
    - "taxonomy_version"
    properties:
      taxonomy_id:
        type: "string"
      taxonomy_name:
        type: "string"
      taxonomy_version:
        type: "string"
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      author_source:
        type: "string"
  taxonomy_list_response:
    type: "object"
    required:
    - "request_id"
    - "taxonomies"
    properties:
      request_id:
        type: "string"
      taxonomies:
        type: "array"
        items:
          $ref: "#/definitions/taxonomy_heading"
  taxonomy_metadata:
    type: "object"
    required:
    - "conditions"
    - "description"
    - "taxonomy_name"
    - "taxonomy_version"
    properties:
      taxonomy_name:
        type: "string"
      taxonomy_version:
        type: "string"
      description:
        type: "string"
      author_source:
        type: "string"
        description: "Author/Agency source of the taxonomy information"
      conditions:
        type: "array"
        items:
          $ref: "#/definitions/condition"
  taxonomies_present:
    type: "object"
    properties:
      taxonomy_ids:
        type: "array"
        description: "'List of taxonomies already present at the source module (Stats).\
          \ The destination module (DataHub) will use this list to avoid sending duplicate\
          \ taxonomy information.'"
        items:
          type: "string"
  test_suite_heading:
    type: "object"
    required:
    - "test_suite_id"
    - "test_suite_name"
    - "test_suite_version"
    properties:
      test_suite_id:
        type: "string"
      test_suite_name:
        type: "string"
      test_suite_version:
        type: "string"
      manifest_urls:
        type: "array"
        items:
          type: "string"
          format: "uri"
          description: "Link to download the associated manifest"
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      author_source:
        type: "string"
        description: "Author/Agency source of the test suite information"
      code_languages:
        $ref: "#/definitions/list_languages"
  test_suite_list_response:
    type: "object"
    required:
    - "request_id"
    - "test_suites"
    properties:
      request_id:
        type: "string"
      test_suites:
        type: "array"
        items:
          $ref: "#/definitions/test_suite_heading"
  test_suite_metadata:
    type: "object"
    required:
    - "test_suite_name"
    - "test_suite_version"
    properties:
      test_suite_name:
        type: "string"
      test_suite_version:
        type: "string"
      test_suite_type:
        type: "string"
        description: "Options include 'juliet', 'stonesoup' etc."
      manifest_urls:
        type: "array"
        items:
          type: "string"
          format: "uri"
          description: "Link to download the associated manifests"
      use_license_file_url:
        type: "string"
        format: "uri"
      author_source:
        type: "string"
        description: "Author/Agency source of the test suite information"
      code_languages:
        type: "array"
        items:
          $ref: "#/definitions/language_version"
  test_suite_upload_response:
    type: "object"
    required:
    - "request_id"
    - "test_suite"
    properties:
      request_id:
        type: "string"
      test_suite:
        $ref: "#/definitions/test_suite_heading"
      status_message:
        type: "string"
  tool_alert_mappings:
    type: "array"
    items:
      $ref: "#/definitions/alert_mappings"
  tool_heading:
    type: "object"
    required:
    - "tool_id"
    - "tool_name"
    - "tool_version"
    properties:
      tool_id:
        type: "string"
      tool_name:
        type: "string"
      tool_version:
        type: "string"
      language_platforms:
        type: "array"
        items:
          type: "string"
      code_language_ids:
        type: "array"
        items:
          type: "string"
      uploader_id:
        type: "string"
      uploader_organization_id:
        type: "string"
      author_source:
        type: "string"
  tool_list_response:
    type: "object"
    required:
    - "request_id"
    - "tools"
    properties:
      request_id:
        type: "string"
      tools:
        type: "array"
        items:
          $ref: "#/definitions/tool_heading"
  tool_metadata:
    type: "object"
    required:
    - "category"
    - "tool_name"
    - "tool_version"
    properties:
      tool_name:
        type: "string"
      tool_version:
        type: "string"
      author_source:
        type: "string"
      language_platforms:
        type: "array"
        description: "List of abbreviated languages the tool analyzes"
        items:
          type: "string"
      tool_parser:
        type: "string"
        description: "Tool name from the GET /tool/parsers API of an available SCAIFE\
          \ parser"
      category:
        type: "string"
        description: "The type of tool, e.g., FFSA or Metrics"
      code_language_ids:
        type: "array"
        items:
          type: "string"
      checker_mappings:
        type: "array"
        description: "JSON-formatted checker_mappings"
        items:
          $ref: "#/definitions/checker_mappings_metadata"
      checkers:
        type: "array"
        items:
          type: "string"
      code_metrics_headers:
        type: "object"
        description: "Header fields expected for the metrics data"
        properties: {}
  tool_parsers:
    type: "object"
    required:
    - "parser_names"
    properties:
      parser_names:
        type: "array"
        items:
          type: "string"
  tool_response:
    type: "object"
    required:
    - "tool_id"
    - "tool_name"
    - "tool_version"
    properties:
      tool_id:
        type: "string"
      tool_name:
        type: "string"
      tool_version:
        type: "string"
      category:
        type: "string"
      language_platforms:
        type: "array"
        items:
          type: "string"
      checkers:
        type: "array"
        items:
          $ref: "#/definitions/checker"
      code_language_ids:
        type: "array"
        items:
          type: "string"
      checker_mappings:
        type: "array"
        items:
          $ref: "#/definitions/tool_response_mapping"
  tool_response_mapping:
    type: "object"
    properties:
      mapping_id:
        type: "string"
      mapping_source:
        type: "string"
      description:
        type: "string"
      mapping_date:
        type: "string"
        format: "date-time"
  tool_taxonomies_present:
    type: "object"
    properties:
      tool_ids:
        type: "array"
        description: "'List of tools already present at the source module (Stats).\
          \ The destination module (DataHub) will use this list to avoid sending duplicate\
          \ tool information.'"
        items:
          type: "string"
      taxonomy_ids:
        type: "array"
        description: "'List of taxonomies already present at the source module (Stats).\
          \ The destination module (DataHub) will use this list to avoid sending duplicate\
          \ taxonomy information.' "
        items:
          type: "string"
  tool_upload_response:
    type: "object"
    required:
    - "request_id"
    - "tool"
    properties:
      request_id:
        type: "string"
      tool:
        $ref: "#/definitions/tool_response"
      status_message:
        type: "string"
